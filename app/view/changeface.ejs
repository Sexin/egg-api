<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>人脸变老</title>
    <!-- 引入样式 -->
    <link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">
    <script src="https://cdn.bootcdn.net/ajax/libs/vConsole/3.9.1/vconsole.min.js"></script>
    <script>
        const vconsle = new VConsole();
    </script>
    <style>
        html {
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
        }

        body {
            padding: 0;
            margin: 0;
            width: 100%;
            height: calc(100% - 65px);
        }

        #app {
            width: 100%;
            height: 100%;
        }

        header {
            width: 100%;
            height: 65px;
            line-height: 65px;
            background: #4FAEE6;
            color: #fff;
            font-size: 20px;
            padding-left: 50px;
            position: fixed;
            top: 0;
        }
    </style>
</head>

<body>
    <div id='app'>
        <video id="video" width="480" height="320" controls>
        </video>
        <div>
            <button id="capture">拍照</button><button @click='getMyOldFace'>开始转换</button>
        </div>
        <canvas id="canvas" width="480" height="320" v-show='false'></canvas>
        <el-image
            style="width: 200px; height: 200px"
            :src="img_path"
            :preview-src-list="[img_path]" v-loading='loading'>
        </el-image>
    </div>
</body>
<script src="https://cdn.jsdelivr.net/npm/vue"></script>
<script src="https://unpkg.com/element-ui/lib/index.js"></script>
<script src="https://cdn.bootcdn.net/ajax/libs/axios/0.1.0/axios.min.js"></script>
<script>
    //访问用户媒体设备的兼容方法
    function getUserMedia(constraints, success, error) {
        if (navigator.mediaDevices.getUserMedia) {
            //最新的标准API
            navigator.mediaDevices.getUserMedia(constraints).then(success).catch(error);
        } else if (navigator.webkitGetUserMedia) {
            //webkit核心浏览器
            navigator.webkitGetUserMedia(constraints, success, error)
        } else if (navigator.mozGetUserMedia) {
            //firfox浏览器
            navigator.mozGetUserMedia(constraints, success, error);
        } else if (navigator.getUserMedia) {
            //旧版API
            navigator.getUserMedia(constraints, success, error);
        }
    }

    let video = document.getElementById('video');
    let canvas = document.getElementById('canvas');
    let context = canvas.getContext('2d');

    function success(stream) {
        //兼容webkit核心浏览器
        let CompatibleURL = window.URL || window.webkitURL;
        //将视频流设置为video元素的源
        console.log(stream);

        //video.src = CompatibleURL.createObjectURL(stream);
        video.srcObject = stream;
        video.play();
    }

    function error(error) {
        console.log(`访问用户媒体设备失败${error.name}, ${error.message}`);
    }

    const vue = new Vue({
        el: '#app',
        data: {
            img_path: '',
            loading: false
        },
        methods: {
            getMyOldFace(data) {
                const that = this;
                this.loading = true
                this.img_path = '';
                axios.post('/api/changeface/getmyoldface', {
                    imgData: canvas.toDataURL( 'image/png', 1)
                }).then(json => {
                    that.img_path = json.data
                    that.loading = false
                })
            }
        }
    })
    if (navigator.mediaDevices.getUserMedia || navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia) {
        //调用用户媒体设备, 访问摄像头
        getUserMedia({ video: { width: 1920, height: 1080 } }, success, error);
    } else {
        alert('不支持访问用户媒体');
    }
    document.getElementById('capture').addEventListener('click', function () {
        context.drawImage(video, 0, 0, 600, 400);
        console.log(canvas.toDataURL( 'image/png' ), 1);
    })
</script>

</html>
