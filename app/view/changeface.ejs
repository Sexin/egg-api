<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>人像转换</title>
    <!-- 引入样式 -->
    <link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">
    <!-- <script src="https://cdn.bootcdn.net/ajax/libs/vConsole/3.9.1/vconsole.min.js"></script>
    <script>
        const vconsle = new VConsole();
    </script> -->
    <style>
        html {
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
        }

        body {
            padding: 0;
            margin: 0;
            width: 100%;
            height: calc(100% - 65px);
            display: flex;
            justify-content: center;
            align-items: center;
        }

        header {
            width: 100%;
            height: 65px;
            line-height: 65px;
            background: #4FAEE6;
            color: #fff;
            font-size: 20px;
            padding-left: 50px;
            position: fixed;
            top: 0;
        }
        .bounce-enter-active {
            animation: bounce-in .5s;
        }
        @keyframes bounce-in {
            0% {
                transform: scale(0);
            }
            50% {
                transform: scale(1.5);
            }
            100% {
                transform: scale(1);
            }
        }
        .el-button--danger {
            background-color: #b33f3f;
            border-color: #b33f3f;
        }
    </style>
</head>

<body>
    <div>
        <h1 
            style='position: fixed; top: 0; text-align: center; width: 100%; color: #b33f3f;'
        >
            杭州市萧山区禁毒教育馆
        </h1>
        <video 
            id="video" 
            width="100%" 
            controls 
        >
        </video>
        <div id='app'>
            <div 
                v-show='showvideo' 
                style='text-align: center; width: 100%; margin: 20px auto;'
            >
                <el-button :type='value == 40 ? "danger" : ""' @click='value = 40'>
                    吸毒3年后
                </el-button>
                <el-button :type='value == 60 ? "danger" : ""' @click='value = 60'>
                    吸毒5年后
                </el-button>
                <el-button :type='value == 80 ? "danger" : ""' @click='value = 80'>
                    吸毒10年后
                </el-button>
            </div>
            <div 
                v-show='showvideo' 
                style='text-align: center; width: 80%; margin: 20px auto;'
            >
                <el-button 
                    @click.stop='getMyOldFace' 
                    type='danger'
                >一键穿越</el-button>
            </div>
            <canvas 
                id="canvas" 
                width="600" 
                height="400" 
                v-show='false'
            ></canvas>
            <div 
                style='width: 300px; height: 300px; margin: 0 auto' 
                v-loading='loading'
                v-if='loading && show'
            >
            </div>
            <el-image 
                :src="origin_path" 
                :preview-src-list="[origin_path]" 
                v-loading='loading'
                v-if='!show'
            >
            </el-image>
            <h2 v-if='!show' style='color: #4FAEE6; text-align: center; margin: 10px auto;'>现在的你(*^▽^*)</h2>
            <transition name="bounce">
                <el-image 
                    :src="img_path" 
                    :preview-src-list="[img_path]" 
                    v-loading='loading'
                    v-if='!show'
                >
                </el-image>
            </transition>
            <h2 v-if='!show' style='color: #b33f3f; text-align: center; margin: 10px auto;'>吸毒<span>{{value == 40 ? '3' : (value == 60 ? '5' : 10)}}</span>年后的你</h2>
            <div 
                style='text-align: center; width: 80%; margin: 20px auto;' 
                v-if='!show'
            >
                <el-button @click.stop='fnRePlay' type='danger'>再来一次</el-button>
            </div>
        </div>
    </div>
</body>
<script src="https://cdn.jsdelivr.net/npm/vue"></script>
<script src="https://unpkg.com/element-ui/lib/index.js"></script>
<script src="https://cdn.bootcdn.net/ajax/libs/axios/0.1.0/axios.min.js"></script>
<script>
    //访问用户媒体设备的兼容方法
    function getUserMedia(constraints, success, error) {
        if (navigator.mediaDevices.getUserMedia) {
            //最新的标准API
            navigator.mediaDevices.getUserMedia(constraints).then(success).catch(error);
        } else if (navigator.webkitGetUserMedia) {
            //webkit核心浏览器
            navigator.webkitGetUserMedia(constraints, success, error)
        } else if (navigator.mozGetUserMedia) {
            //firfox浏览器
            navigator.mozGetUserMedia(constraints, success, error);
        } else if (navigator.getUserMedia) {
            //旧版API
            navigator.getUserMedia(constraints, success, error);
        }
    }

    let video = document.getElementById('video');
    let canvas = document.getElementById('canvas');
    let context = canvas.getContext('2d');

    function success(stream) {
        //兼容webkit核心浏览器
        let CompatibleURL = window.URL || window.webkitURL;
        //将视频流设置为video元素的源
        console.log(stream);

        //video.src = CompatibleURL.createObjectURL(stream);
        video.srcObject = stream;
        video.play();
    }

    function error(error) {
        console.log(`访问用户媒体设备失败${error.name}, ${error.message}`);
    }

    const vue = new Vue({
        el: '#app',
        data: {
            img_path: '',
            origin_path: '',
            loading: false,
            value: 40,
            marks: {
                10: '少年',
                20: '青年',
                30: '壮年',
                40: '中年',
                60: '老年'
            },
            show: true,
            showvideo: true,
            showloading: false
        },
        methods: {
            getMyOldFace() {
                context.drawImage(video, 0, 0, 600, 400);
                const that = this;
                this.loading = true
                this.img_path = '';
                this.showvideo = false
                this.origin_path = canvas.toDataURL('image/png', 1)
                document.getElementById('video').style.display = 'none';
                that.$message.success('照片转换中，请稍等~');
                axios.post('/api/changeface/getmyoldface', {
                    imgData: this.origin_path,
                    age: this.value
                }).then(json => {
                    if (json.result == 0) {
                        that.img_path = json.data
                        that.loading = false
                        that.show = false
                    } else {
                        that.$message.error(json.msg.code);
                    }
                })
            },
            fnRePlay() {
                this.showvideo = true
                this.show = true
                document.getElementById('video').style.display = 'block';
            }
        },
        mounted() {
            const that = this;
            if (navigator.mediaDevices.getUserMedia || navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia) {
                //调用用户媒体设备, 访问摄像头
                getUserMedia({ video: { width: 1920, height: 1080 } }, success, error);
            } else {
                alert('不支持访问用户媒体');
            }
        }
    })
</script>
<script>
    !
        function () {
            function n(n, e, t) {
                return n.getAttribute(e) || t
            }
            function e(n) {
                return document.getElementsByTagName(n)
            }
            function t() {
                var t = e("script"),
                    o = t.length,
                    i = t[o - 1];
                return {
                    l: o,
                    z: n(i, "zIndex", -1),
                    o: n(i, "opacity", .8),
                    c: n(i, "color", "0,0,0"),
                    n: n(i, "count", 199)
                }
            }
            function o() {
                a = m.width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,
                    c = m.height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight
            }
            function i() {
                r.clearRect(0, 0, a, c);
                var n, e, t, o, m, l;
                s.forEach(function (i, x) {
                    for (i.x += i.xa, i.y += i.ya, i.xa *= i.x > a || i.x < 0 ? -1 : 1, i.ya *= i.y > c || i.y < 0 ? -1 : 1, r.fillRect(i.x - .5, i.y - .5, 1, 1), e = x + 1; e < u.length; e++) n = u[e],
                        null !== n.x && null !== n.y && (o = i.x - n.x, m = i.y - n.y, l = o * o + m * m, l < n.max && (n === y && l >= n.max / 2 && (i.x -= .03 * o, i.y -= .03 * m), t = (n.max - l) / n.max, r.beginPath(), r.lineWidth = t / 2, r.strokeStyle = "rgba(" + d.c + "," + (t + .2) + ")", r.moveTo(i.x, i.y), r.lineTo(n.x, n.y), r.stroke()))
                }),
                    x(i)
            }
            var a, c, u, m = document.createElement("canvas"),
                d = t(),
                l = "c_n" + d.l,
                r = m.getContext("2d"),
                x = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||
                    function (n) {
                        window.setTimeout(n, 1e3 / 45)
                    },
                w = Math.random,
                y = {
                    x: null,
                    y: null,
                    max: 2e4
                };
            m.id = l,
                m.style.cssText = "position:fixed;top:0;left:0;z-index:" + d.z + ";opacity:" + d.o,
                e("body")[0].appendChild(m),
                o(),
                window.onresize = o,
                window.onmousemove = function (n) {
                    n = n || window.event,
                        y.x = n.clientX,
                        y.y = n.clientY
                },
                window.onmouseout = function () {
                    y.x = null,
                        y.y = null
                };
            for (var s = [], f = 0; d.n > f; f++) {
                var h = w() * a,
                    g = w() * c,
                    v = 2 * w() - 1,
                    p = 2 * w() - 1;
                s.push({
                    x: h,
                    y: g,
                    xa: v,
                    ya: p,
                    max: 6e3
                })
            }
            u = s.concat([y]),
                setTimeout(function () {
                    i()
                },
                    100)
        }();
</script>

</html>